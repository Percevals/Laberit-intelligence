/**
 * Vulnerability Window Component
 * Display critical vulnerability predictions
 */

import { motion } from 'framer-motion';
import {
  AlertTriangle,
  Shield,
  Clock,
  Crosshair,
  TrendingUp,
  Zap
} from 'lucide-react';
import type { VulnerabilityWindow as VulnerabilityWindowType } from '@/services/intelligence-engine';
import { cn } from '@shared/utils/cn';

interface VulnerabilityWindowProps {
  window: VulnerabilityWindowType;
}

export function VulnerabilityWindow({ window }: VulnerabilityWindowProps) {
  const getRiskColor = () => {
    switch (window.risk) {
      case 'Critical': return 'text-red-500 bg-red-500/10 border-red-500/30';
      case 'High': return 'text-orange-500 bg-orange-500/10 border-orange-500/30';
      case 'Medium': return 'text-yellow-500 bg-yellow-500/10 border-yellow-500/30';
      case 'Low': return 'text-green-500 bg-green-500/10 border-green-500/30';
      default: return 'text-gray-500 bg-gray-500/10 border-gray-500/30';
    }
  };

  const getDimensionInfo = () => {
    const info: Record<string, { name: string; icon: React.ComponentType<any> }> = {
      TRD: { name: 'Time to Revenue Damage', icon: Clock },
      AER: { name: 'Attack Economic Reward', icon: TrendingUp },
      HFP: { name: 'Human Failure Probability', icon: Shield },
      BRI: { name: 'Business Risk Impact', icon: Crosshair },
      RRG: { name: 'Recovery Resource Gap', icon: Zap }
    };
    return info[window.dimension] || { name: window.dimension, icon: Shield };
  };

  const { name, icon: DimensionIcon } = getDimensionInfo();

  return (
    <motion.div
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      className={cn(
        "bg-dark-surface border rounded-lg p-4",
        getRiskColor()
      )}
    >
      {/* Header */}
      <div className="flex items-start justify-between mb-3">
        <div className="flex items-center gap-3">
          <div className={cn("p-2 rounded-lg", getRiskColor())}>
            <DimensionIcon className="w-5 h-5" />
          </div>
          <div>
            <h4 className="font-medium text-dark-text">{name}</h4>
            <div className="flex items-center gap-2 mt-1">
              <span className={cn("text-xs font-medium", getRiskColor().split(' ')[0])}>
                {window.risk} Risk
              </span>
              <span className="text-xs text-dark-text-secondary">
                â€¢ {window.timeframe}
              </span>
            </div>
          </div>
        </div>
        
        <div className="text-right">
          <div className="text-2xl font-bold text-dark-text">
            {window.probability}%
          </div>
          <div className="text-xs text-dark-text-secondary">
            Probability
          </div>
        </div>
      </div>

      {/* Description */}
      <p className="text-sm text-dark-text-secondary mb-3">
        {window.description}
      </p>

      {/* Triggers */}
      <div className="mb-3">
        <div className="flex items-center gap-2 mb-2">
          <AlertTriangle className="w-4 h-4 text-orange-500" />
          <span className="text-xs font-medium text-dark-text">Potential Triggers</span>
        </div>
        <div className="flex flex-wrap gap-1">
          {window.triggers.map((trigger, index) => (
            <span
              key={index}
              className="px-2 py-1 text-xs bg-dark-bg text-dark-text-secondary rounded"
            >
              {trigger}
            </span>
          ))}
        </div>
      </div>

      {/* Impact */}
      <div className="mb-3">
        <div className="flex items-center gap-2 mb-1">
          <Crosshair className="w-4 h-4 text-red-500" />
          <span className="text-xs font-medium text-dark-text">Potential Impact</span>
        </div>
        <p className="text-sm text-dark-text-secondary">
          {window.impact}
        </p>
      </div>

      {/* Mitigation */}
      <div className="bg-dark-bg rounded-lg p-3">
        <div className="flex items-center gap-2 mb-2">
          <Shield className="w-4 h-4 text-green-500" />
          <span className="text-xs font-medium text-dark-text">Recommended Mitigation</span>
        </div>
        <p className="text-sm text-dark-text">
          {window.mitigation}
        </p>
      </div>

      {/* Visual Risk Indicator */}
      <div className="mt-4 pt-3 border-t border-dark-border">
        <div className="flex items-center justify-between text-xs text-dark-text-secondary">
          <span>Risk Timeline</span>
          <span>{window.timeframe}</span>
        </div>
        <div className="mt-2 h-2 bg-dark-bg rounded-full overflow-hidden">
          <motion.div
            initial={{ width: 0 }}
            animate={{ width: `${window.probability}%` }}
            transition={{ duration: 1, ease: "easeOut" }}
            className={cn("h-full", getRiskColor().split(' ')[0]?.replace('text-', 'bg-') || 'bg-gray-500')}
          />
        </div>
      </div>
    </motion.div>
  );
}